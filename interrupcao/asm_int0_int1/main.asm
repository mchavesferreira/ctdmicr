;====================================================================
; Main.asm file generated by New Project wizard
;
; Created:   seg out 26 2015
; Processor: ATmega328P
; Compiler:  AVRASM (Proteus)
;====================================================================

;====================================================================
; DEFINITIONS
;====================================================================
.equ vermelho = pb0
.equ amarelo = pb1
.equ verde = pb2
;====================================================================
; VARIABLES
;====================================================================

;====================================================================
; RESET and INTERRUPT VECTORS
;====================================================================
.org 0x0000
      ; Reset Vector
      rjmp  Start
.org 0x0002 ; porta que pode receber o botão deinterrupção
      rjmp trata_int0
.org 0x0004 ; porta que pode receber o botão deinterrupção
      rjmp trata_int1

      

.org 0x050		
;====================================================================
; CODE SEGMENT
;====================================================================
.include "lib328Pv01.inc"
Start:
      ; Write your code here
	sbi ddrb,0
	sbi ddrb,1
	sbi ddrb,2
	sei ; habilita as interrupções no microcontrolador
	sbi EIMSK,INT0 ; habilita a interrupção externa 0
	sbi EIMSK,INT1 ; habilita a interrupção externa 0
Loop:
	sbi portb,vermelho				
	ldi delay_time,1			
	rcall delay_seconds				
	cbi portb,vermelho
	sbi portb,verde				
	ldi delay_time,1			
	rcall delay_seconds
	cbi portb,verde
	sbi portb,amarelo
	ldi delay_time,1		
	rcall delay_seconds
	cbi portb,amarelo
    rjmp  Loop

;====================================================================
trata_int0:
	cbi portb,vermelho
	cbi portb,verde
blink: ; pisca o amarelo
	sbi portb,amarelo
	ldi delay_time,1			
	rcall delay_seconds
	cbi portb,amarelo
	ldi delay_time,1			
	rcall delay_seconds
	rjmp blink
	;reti	

trata_int1:
	cbi portb,amarelo
	cbi portb,verde
	sbi portb,vermelho
	sei
	rjmp trata_int1
	